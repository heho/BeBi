@import "fontloading"
@import "reset"
@import "variables"

// Helper

.highlightHelper
  background-color rgba(0, 0, 0, 0.2)
  border 2px solid rgba(0, 0, 0, 0.4)

// Mixins

widthCache($width)
	+cache('width' + $width)
		width: $width

border-radius(n)
	-webkit-border-radius n
	-moz-border-radius n
	border-radius n

transition(n)
	-webkit-transition n
	-moz-transition n
	-ms-transition n
	-o-transition n
	transition n
  
user-select(n)
  -webkit-user-select none
  -moz-user-select none
  -ms-user-select none
  user-select none

// worker functions

for i in range(0, -1+length(userColors))
	pair = ()
	push(pair, prioritiesWritten[i] + "Color", userColors[i])
	define(pair[0], pair[1])
	push(colors, pair)
  
for i in range(0, levelsOfElevation)
	boxShadowHelper = "" + (0.5*i*1px) + " " + (1.5*i*1px) + " " + (2.5*i*1px) + " " +  (0*i*1px) + " " + (rgba(100, 100, 100, (0.32-(i*0.04))))
	.{NumsWritten[i]}.elevated
		box-shadow unquote(boxShadowHelper) !important
    
	define("elevationHelper-" + i, boxShadowHelper)

/*** Main rules ***/


/* everything */
  
*, *:after, *:before
	-webkit-box-sizing border-box
	-moz-box-sizing border-box
	box-sizing border-box
  
body
	font-family ptSans
  
.rounded
	border-radius(borderRadius)
  
div, button, a, span, p
	transition(all 300ms ease)

@import "structural\structural"
@import "icons\icons"
@import "elements\elements"
@import "components\components"
@import "interactive\interactive"